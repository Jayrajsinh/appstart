<?php $form = $this->form;?>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/onlytimepicker/onlytimepicker.js"); ?>"></script>
<style>
.timings-label {
	display: inline;
	display: inline-block;
	width: 50px;
	padding: 5px;
}

.timings-input {
	display: inline;
	display: inline-block;
	padding: 5px;
}

.timings-submit {
	display: inline;
	display: inline-block;
	padding-left: 110px;
	padding-top: 10px;
}

.submit-timings-box {
	border: solid 1px #dcdde2;
	background-color: #f2f4f8;
	-webkit-border-radius: 6px;
	-moz-border-radius: 6px;
	border-radius: 6px;
	margin-bottom: 10px;
	padding: 8px;
}

#gMap {
	margin: auto;
	border: 1px solid #DCDDE2;
	width: 100%;
	height: 400px;
}
</style>
<div id="filterBox">
	<table
		style="width: 100%; border: 0; border-spacing: 0; border-collapse: collapse;">
		<tr>
			<td valign="middle"><?php echo $this->partial($this->partial,array()); ?></td>
			<td align="right"><h2><?php echo $this->language; ?></h2></td>
		</tr>
	</table>
</div>
<div class="boxBorderBottom">
	<form id="frmAddEditContact" method="<?php echo $form->getMethod();?>"
		action="<?php echo $form->getAction();?>" class="zend_form">
	<table>
			<tbody>
				<tr>
					<td>
						<?php echo $form->contact_id->renderViewHelper(); ?>
						<?php echo $form->contact_detail_id->renderViewHelper(); ?>
						<?php echo $form->language_id->renderViewHelper(); ?>
					</td>
				</tr>
				<tr>
					<td rowspan="2"><?php echo $form->address->renderLabel() ?></td>
					<td rowspan="2"><?php echo $form->address->renderViewHelper()?></td>
					<td class="colon2" colspan="3" valign="top">
						<table border="1px" class="timings">
							<thead>
								<tr><th colspan="6">Office Timings</th></tr>
								<tr>
									<th width="70px">Order</th>
									<th width="200px">Day</th>
									<th width="100px">Open From</th>
									<th width="100px">Open To</th>
									<th width="70px" colspan="2">Actions</th>
								</tr>
							</thead>
							<tbody>
							<?php
							if($this->timings){
								$timings = $this->timings;
								//creating object from timings data from database
								$xml = simplexml_load_string($timings);
								//adding the record in object to make sure edited data stays in object								
							    
								echo "<script type='text/javascript'>
										window.createdXML =  [];	
										window.createdXMLNew =  ".json_encode($xml).";	
										if(window.createdXMLNew.record!=undefined){
											if(window.createdXMLNew.record.length!=undefined){
												for(x in window.createdXMLNew.record){
													if(typeof window.createdXMLNew.record[x]=='object'){
														window.createdXML.push(window.createdXMLNew.record[x]);
													}
												}
											}else{
												window.createdXML.push(window.createdXMLNew.record);
											}
										}										
									</script>";
								
							} 
							$i = 1;
							//NOTE: class for TR starts from 1
							//		class edit delete a tags start from 0
							if(is_object($xml)){
								foreach ($xml as $key=>$record){
									echo "<tr class=row{$i}>
											<td class='order' style='text-align:center'>{$record->order}</td>
											<td class='day' style='text-align:center'>{$record->day}</td>
											<td class='from' style='text-align:center'>{$record->from}</td>
											<td class='to' style='text-align:center'>{$record->to}</td>
											<td><a class='edit-timings-{$i}'>Edit</a></td>
											<td><a class='delete-timings-{$i}'>Delete</a></td>
										</tr>";
									$i++;
								}
							}
							?>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td class="colon2"><a class="open-office-timings greay button-grid">Add</a></td>
				</tr>
				<tr>
					<td rowspan="3"><?php echo $form->information->renderLabel() ?></td>
					<td rowspan="3"><?php echo $form->information->renderViewHelper() ?></td>
					<td class="colon2"><?php echo $form->website->renderLabel() ?></td>
					<td><?php echo $form->website->renderViewHelper()?></td>
				</tr>
				<tr>
					<td class="colon2"><?php echo $form->fax->renderLabel() ?></td>
					<td><?php echo $form->fax->renderViewHelper()?></td>
				</tr>
				<tr>
					<td class="colon2"><label for="logo"><?php echo $this->translate('Logo')?></label></td>
					<td><input id="logo" type="file" name="logo" /> <input id="logo_path" type="hidden" name="logo_path" value="<?php echo $this->logo_path; ?>" /></td>
					<td><img alt="" src="<?php echo $this->logo_path; ?>"></td>
				</tr>
				<tr>
					<td><?php echo $form->phone_1->renderLabel() ?></td>
					<td><?php echo $form->phone_1->renderViewHelper()?></td>
					<td class="colon2"><?php echo $form->status->renderLabel() ?></td>
					<td><?php echo $form->status->renderViewHelper()?></td>
				</tr>
				<tr id="hiddenphone_1" style="display: none">
					<td><?php echo $form->phone_2->renderLabel() ?></td>
					<td><?php echo $form->phone_2->renderViewHelper()?></td>
				</tr>
				<tr  id="hiddenphone_2" style="display: none">
					<td><?php echo $form->phone_3->renderLabel() ?></td>
					<td><?php echo $form->phone_3->renderViewHelper()?></td>
				</tr>
				<tr>
					<td colspan="2"><input type="button" class="addMore" id="addBtnPhone"
						 onclick="addPhone();" /></td>
				</tr>
				<tr>
					<td><?php echo $form->email_1->renderLabel() ?></td>
					<td><?php echo $form->email_1->renderViewHelper()?></td>
				</tr>
				<tr id="hiddenemail_1" style="display: none">
					<td><?php echo $form->email_2->renderLabel() ?></td>
					<td><?php echo $form->email_2->renderViewHelper()?></td>
				</tr>
				<tr id="hiddenemail_2" style="display: none">
					<td><?php echo $form->email_3->renderLabel() ?></td>
					<td><?php echo $form->email_3->renderViewHelper()?></td>
				</tr>
				<tr>
					<td><input type="button" class="addMore" id="addBtnEmail"
						 onclick="addEmail();" />
					</td>
				</tr>
				<tr>
					<td colspan="2"><input type="checkbox" checked="checked" name="mark-fixed"
							id="mark-fixed" /> <label for="mark-fixed"><?php echo $this->translate('Auto Locate')?> </label>
					</td>
				</tr>
				<tr>
					<td rowspan="4" colspan="4"><div id="gMap"></div></td>
					<td class="colon2">
						<?php echo $form->location->renderLabel() ?>
						<?php echo $form->location->renderViewHelper()?>
					</td>
				</tr>
				<tr>
					<td class="colon2" colspan='2'>
						<?php echo $form->latitude->renderLabel() ?>
						<?php echo $form->latitude->renderViewHelper()?>
					</td>
				</tr>
				<tr>
					<td class="colon2" colspan="2">
						<?php echo $form->longitude->renderLabel() ?>
						<?php echo $form->longitude->renderViewHelper()?>
					</td>
				</tr>
				<table style="width: 100%">
					<tr>
						<td align="center">
				        <?php echo $form->submit->renderViewHelper() ?>&nbsp;
						<?php echo $form->reset->renderViewHelper()?>
						</td>
					</tr>
			</table>
			</tbody>
		</table>
	</form>
</div>
<!-- timing form popup --> 
<div id="office-time" style="display: none;">
	<div class="timings-label">
		<label>Order</label>
	</div>
	<div class="timings-input">
		<input name="order" class="reqCheck" type="text" />
	</div>
	<div class="timings-label">
		<label>Day</label>
	</div>
	<div class="timings-input">
		<input name="day" class="reqCheck" type="text" />
	</div>
	<div class="timings-label">
		<label>OrderFrom</label>
	</div>
	<div class="timings-input">
		<input name="from" class="reqCheck timingplugin" type="text" />
	</div>
	<div class="timings-label">
		<label>Order To</label>
	</div>
	<div class="timings-input">
		<input name="to" class="reqCheck timingplugin" type="text" />
	</div>
	<div class="timings-submit">
		<input type="button" class="submit-timings" name="submitData"
			value="submit">
	</div>
</div>

<script type="text/javascript">
$(document).ready(function() {
	$('.timingplugin').timeEntry({show24Hours: true});
	// Clearing the values on Add Timings
	$('.open-office-timings').on("click",function(){
		$('.reqCheck').each(function(){
			$(this).val("");
		});
		$("#office-time").dialog({
    		modal: true,
    		width: 300,
    		resizable: false,
    		title: "Add New Entry",
    		dialogClass: "Add"
    	});
	});

	$('.timings-submit').on("click",function(){
		window.createdXML = window.createdXML? window.createdXML: [];
		var totalRows = window.createdXML.length + 1;
		var dialog = $(this).closest('.ui-dialog');
		var self = this;
        
  		var valid =  true;
  		//validation check: Nothing should be empty
		$('.reqCheck').each(function(){
			if($(this).attr("value").length == 0){
				valid = false;		
			}
		});
		if(valid == true){
			//Edit Mode
			if($(dialog).hasClass("Edit")){
				//Getting the class where Editing needs to be done
				var createdTr = window.currentRow;
				//Getting the record number in created object
				var currentRow = parseInt($(createdTr).attr("class").replace("row",''),10)-1;
				$(createdTr).find('.order').html($('input[name=order]').attr("value"));
				$(createdTr).find('.day').html($('input[name=day]').attr("value"));
				$(createdTr).find('.from').html($('input[name=from]').attr("value"));
				$(createdTr).find('.to').html($('input[name=to]').attr("value"));
				window.currentRow = undefined;
				window.createdXML[currentRow] = {
						'order': $('input[name=order]').attr("value"),
						'day': $('input[name=day]').attr("value"),
						'from':$('input[name=from]').attr("value"),
						'to' : $('input[name=to]').attr("value"),
				};
				
			} else {
				//Add Mode
				var createdTr = "<tr class=row" + (totalRows) + ">" +
				"<td class='order' style='text-align:center'>" + $('input[name=order]').attr("value")  +"</td>" +
				"<td class='day' style='text-align:center'>" + $('input[name=day]').attr("value") +"</td>" +
				"<td class='from' style='text-align:center'>" + $('input[name=from]').attr("value") +"</td>" +
				"<td class='to' style='text-align:center'>" + $('input[name=to]').attr("value") +"</td>" +
				"<td>" + "<a class=edit-timings-" + totalRows +" timinglink>Edit"+"</a>" +"</td>" +
				"<td>" + "<a class=delete-timings-" + totalRows +" timinglink>Delete"+"</a>" +"</td>" +
				"</tr>";
				//recordId = "record"+totalRows; 
				recordObject = {
						'order': $('input[name=order]').attr("value"),
						'day': $('input[name=day]').attr("value"),
						'from':$('input[name=from]').attr("value"),
						'to' : $('input[name=to]').attr("value")
				};
				window.createdXML.push(recordObject);
				
				$('.timings tbody').append(createdTr);
			}
			$('#office-time').dialog("close");
		}else{
			promptus = new prompt({
	           	reference : self,
	            element : "#office-time",
	            beforeShow : function(){
	                this.alternateMessage = this.showErrorMessage("Incomplete Data!");
                } 
			});
			setTimeout(function(){
	  	        promptus.close();
	  		}, 1000);
		}
	});
	//Editing The record from Timings Grid
	$('a[class^=edit-timings-]').live("click",function(){
		$("#office-time").dialog({
    		modal: true,
    		width: 300,
    		resizable: false,
    		title: "Edit Entry:",
        	dialogClass: "Edit"
    	});
    	//Getting the parent class of record
    	var tr = $("."+$(this).attr("class")).closest("tr");
		var order = tr.find("td[class='order']").html();
		var day = tr.find("td[class='day']").html();
		var from = tr.find("td[class='from']").html();
		var to = tr.find("td[class='to']").html();
		$('input[name=order]').attr("value",order);
		$('input[name=day]').attr("value",day);
		$('input[name=from]').attr("value",from);
		$('input[name=to]').attr("value",to);
		//Sending the parent class information to onsubmit function 
		window.currentRow = tr;
	});
	$('a[class^=delete-timings-]').live("click",function(){
		var deletedRow = parseInt($(this).attr("class").replace("delete-timings-",''))-1;
		delete window.createdXML[deletedRow];
		$("."+$(this).attr("class")).closest("tr").remove();
	});
	/*var items = [];
	$('.timings > tr').each(function(){
	    items.push($(this).find("td").val());
	});
	console.log(items);*/
	$("#frmAddEditContact").validator().submit(function(e){
		var XML = "<node>";
		$(window.createdXML).each(function(key,value){
			if(value != undefined){
				XML += "<record>";
				XML += "<order>"+value.order+"</order>";
				XML += "<day>"+value.day+"</day>";
				XML += "<from>"+value.from+"</from>";
				XML += "<to>"+value.to+"</to>";
				XML += "</record>";
			}
		});
		XML += "</node>";
		var form = $(this);
		if(!e.isDefaultPrevented()){
			var promptus = false;
			$(document).queue(function(next){
				promptus = new prompt({
	            	reference : form,
	                element : "#content",
	                beforeShow : function(){
		                this.alternateMessage = this.showLoadingMessage("<?php echo $this->translate('Saving Contact...')?>");
	                }
	            });
	            next();
			}).queue(function(next){
				if($('#logo').attr("value")!="") {
					$.ajaxFileUpload({
						url:'<?php echo $form->getAction(); ?>',
						secureuri:false,
						fileElementId:'logo',
						dataType: 'json',
						data:{upload:'true'},
						success: function (data, status)
						{
							if(data.success != undefined) {
								$("#logo_path").attr("value",data.success);
								next();
							}
						},
						error: function (data, status, e)
						{
							promptus.showErrorMessage("<?php echo $this->translate('Error uploading logo.')?>");
							setTimeout(function(){
								promptus.close();
							}, 2000);
							
						}
					});
				} else {
					next();
				}
			}).queue(function(next){
				$.ajax({
					type : "POST",
					cache : false,
					data : form.serialize()+'&xml='+XML,
					url : "<?php echo $form->getAction(); ?>",
					success : function(json){
						if(json["errors"] != undefined){
							form.data("validator").invalidate(json["errors"]);
							next();
						} else if(json["success"] != undefined){
							promptus.showSuccessMessage("<?php echo $this->translate('Contact saved successfully.')?>");
							setTimeout(function(){
								location.href = "<?php echo $this->url(array("module"=>"contact","controller"=>"index","action" => "index"),"default",true);?>";
							}, 2000);
						}
					},
					error : next
	  			});
			}).queue(function(next){
				promptus.close();
				next();
	  		});
			e.preventDefault();
		}
	});

	// Initialize Google Map
	$('#gMap').gmap3({
    	action: 'init',
        options:{
        	center:[0, 0],
        	mapTypeId: google.maps.MapTypeId.SATELLITE,
        	zoom: 1
        },
        callback: function(){
            
        }
    });

    // Set current geo-loaction on Map
    if($("#latitude").attr("value")=="" && $("#longitude").attr("value")=="")
    {
    	var url = "http://www.geoplugin.net/json.gp?jsoncallback=?";

    	$(document).queue(function(next){

    		if(navigator.geolocation) {
        		var locationMarker = null;
        		navigator.geolocation.getCurrentPosition(function(position) {
            		if(locationMarker) {
    					return;
            		}
            		$('#gMap').gmap3('setDefault', {init:{center:[ position.coords.latitude,position.coords.longitude ]}});
               		$("#latitude").attr("value",position.coords.latitude);
           			$("#longitude").attr("value",position.coords.longitude);

           			next();
        		}, function() {
        			
        		});
        	} 
        	
        	if($("#latitude").attr("value")=="" && $("#longitude").attr("value")=="") {    		
        		$.getJSON(url, function(data){
                	if(data['geoplugin_status'] == 200){
            	        // Do something with the data
            	    	$('#gMap').gmap3('setDefault', {init:{center:[ data["geoplugin_latitude"],data["geoplugin_longitude"] ]}});
        				//$('#gMap').gmap3({action: 'setCenter', args:[ data["geoplugin_latitude"],data["geoplugin_longitude"] ]});
                   		$("#latitude").attr("value",data["geoplugin_latitude"]);
               			$("#longitude").attr("value",data["geoplugin_longitude"]);
            	    }
            	    else
            	    {
            	    	$('#gMap').gmap3('setDefault', {init:{center:[ 0,0 ]}});
                   		$("#latitude").attr("value",0);
               			$("#longitude").attr("value",0);
            	    }
            	}).complete(next);
        	}
    	}).queue(function(next){
    		// Set Marker to the current geo-location
           	$('#gMap').gmap3({ 
                action: 'addMarker',
                latLng:[$("#latitude").attr("value"),$("#longitude").attr("value")],
    			options:{
                	draggable: true,
                    animation: google.maps.Animation.DROP
                },
                events:{
                	drag: function(marker, event, data) {
                		var pos = marker.getPosition();
                    	$("#latitude").attr("value",pos.lat());
                    	$("#longitude").attr("value",pos.lng());
                	}
                }
            });
			next();
    	});    	
    } else {
    	// Set Marker to the current geo-location
    	$("#mark-fixed").removeAttr("checked");
       	$('#gMap').gmap3({ 
            action: 'addMarker',
            latLng:[$("#latitude").attr("value"),$("#longitude").attr("value")],
			options:{
            	draggable: true,
                animation: google.maps.Animation.DROP
            },
            events:{
            	drag: function(marker, event, data) {
            		var pos = marker.getPosition();
                	$("#latitude").attr("value",pos.lat());
                	$("#longitude").attr("value",pos.lng());
            	}
            }
        });
    }
    // Callback to auto set marker based on address
    $("#address").on("blur",function(){
    	if($("#mark-fixed").attr("checked")!="checked") return;
    	$('#gMap').gmap3({
    		action:'getAddress',
    		address:$("#address").attr("value"),
    		callback:function(results){
    			if (!results) return;
    			var item = results[0];
    			$("#gMap").gmap3(
    	    		{action:'clear', name:'marker'},
    				{
        				action:'addMarker',
    					latLng:item.geometry.location,
    					map: {center:true, zoom:17},
    					options:{
  				        	draggable: true,
  				        	animation: google.maps.Animation.DROP
  				        },
  				        events:{
  				        	drag: function(marker, event, data) {
  				        		var pos = marker.getPosition();
  				            	$("#latitude").attr("value",pos.lat());
  				            	$("#longitude").attr("value",pos.lng());
  				        	}
  				        }
    				}
        		);
    			var pos = item.geometry.location;
            	$("#latitude").attr("value",pos.lat());
            	$("#longitude").attr("value",pos.lng());
    		}
    	});
	});
	
    // Callback to auto set marker based on latitude and longitude
    $("#latitude,#longitude").on("blur",function(){
    	if($("#mark-fixed").attr("checked")!="checked") return;
        $("#gMap").gmap3(
			{action:'clear', name:'marker'},
			{
    			action:'addMarker',
				latLng:[$("#latitude").attr("value"),$("#longitude").attr("value")],
				map: {center:true, zoom:10},
				options:{
					draggable: true,
					animation: google.maps.Animation.DROP
				},
				events:{
					drag: function(marker, event, data) {
				    	var pos = marker.getPosition();
				        $("#latitude").attr("value",pos.lat());
				        $("#longitude").attr("value",pos.lng());
					}
				}
			}
		);
	});
    $(".timings input[type=checkbox]").trigger("change");
});
//  function which disables open-close text boxes on checkbox:checked 
//	and opens a comment box and vice versa
$(document).on('change',".timings input[type=checkbox]",function(){
	var id = $(this).attr("id");
	if($(this).is(":checked")){
	    $("#open"+id).attr("disabled","disabled");
	    $("#close"+id).attr("disabled","disabled");
	    $("#comment"+id).show();
	    $('.dynamichead').show();
	} else {
		$('#open'+id).removeAttr('disabled');
        $('#close'+id).removeAttr('disabled');
        $('#comment'+id).hide();
        if($(".timings input[type='checkbox']:checked").length == 0) {
            $(".dynamichead").hide();
        }
	}
});
emaildisplay=1;
function addEmail(){
	
	if(emaildisplay<=2){
		$("#hiddenemail_"+(emaildisplay)).show();				
		emaildisplay++;
	}
	if(emaildisplay==3)
		$("#addBtnEmail").hide();
	
}
phonedisplay=1;
function addPhone(){
	
	if(phonedisplay<=2){
		$("#hiddenphone_"+(phonedisplay)).show();				
		phonedisplay++;
	}
	if(phonedisplay==3)
		$("#addBtnPhone").hide();
	
}

// -->
</script>