<?php 
$generalConfigurationForm = $this->generalConfigurationForm;
$moduleForm = $this->moduleForm;
$data = $this->data;
?>
<style type="text/css">
input[type=button]{ background: none repeat scroll 0 0 lime !important;}
label.dd-option-text,label.dd-selected-text{float:left; width: 200px;line-height:15px !important;padding-top: 15px;}
a.dd-selected:hover{color: black !important;text-decoration: none !important;}
</style>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/colorpicker/jquery.colorpicker.js"); ?>"></script>
<link href="<?php echo $this->baseUrl("libs/colorpicker/jquery.colorpicker.css"); ?>" rel="stylesheet" type="text/css"/>
<script src="<?php echo $this->baseUrl("libs/colorpicker/i18n/jquery.ui.colorpicker-en.js"); ?>"></script>
<script src="<?php echo $this->baseUrl("libs/dropdown/dd.js"); ?>"></script>
<div id="config-tabs">
	<ul>
		<li><a href="#general-config"><?php echo $this->translate('General Configuration');?></a></li>
		<li><a href="#module-config"><?php echo $this->translate('Module Configuration');?></a></li>
		<li><a href="#reorder"><?php echo $this->translate('Reorder');?></a></li>
	</ul>
	<div id="general-config">
		<form action="<?php echo $generalConfigurationForm->getAction(); ?>"
			method="<?php echo $generalConfigurationForm->getMethod();?>"
			id="frmGeneralConfiguration" class="zend_form">
			<?php echo $generalConfigurationForm->customer_configuration_id->renderViewHelper()?>
			<?php echo $generalConfigurationForm->customer_id->renderViewHelper()?>
			<table>
				<tbody>
					<tr>
						<td><?php echo $generalConfigurationForm->font_type->renderLabel() ?></td>
						<td><?php echo $generalConfigurationForm->font_type->renderViewHelper()?></td>
					</tr>
					<tr>
						<td><?php echo $generalConfigurationForm->font_color->renderLabel() ?></td>
						<td><?php echo $generalConfigurationForm->font_color->renderViewHelper()?></td>
					</tr>
					<tr>
						<td><?php echo $generalConfigurationForm->font_size->renderLabel() ?></td>
						<td><?php echo $generalConfigurationForm->font_size->renderViewHelper()?></td>
					</tr>
					<tr>
						<td><?php echo $generalConfigurationForm->spacing->renderLabel() ?></td>
						<td><?php echo $generalConfigurationForm->spacing->renderViewHelper()?></td>
					</tr>
					<tr>
						<td><?php echo $generalConfigurationForm->theme_color->renderLabel(); ?></td>
						<td><?php echo $generalConfigurationForm->theme_color->renderViewHelper()?></td>
					</tr>
				</tbody>
			</table>
			<div class="customer_submit"><?php echo $generalConfigurationForm->submit->renderViewHelper().$generalConfigurationForm->reset->renderViewHelper();?></div>
		</form>
	</div>
	<div id="module-config">
		<div id="data-grid">
			<table style="border-spacing: 0; border-collapse: collapse; width: 100%"
				class="pattern-style-b" id="dataGrid">
				<thead>
					<tr>
						<th scope="col"><?php echo $this->translate('Module Name')?></th>
						<th scope="col"><?php echo $this->translate('Screen Name')?></th>
						<th scope="col"><?php echo $this->translate('Visible')?></th>
						<th scope="col"><?php echo $this->translate('Order')?></th>
						<th scope="col"><?php echo $this->translate('Published')?></th>
						<th scope="col"><?php echo $this->translate('Actions')?></th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td colspan="6" class="dataTables_empty"><?php echo $this->translate('Loading data from server')?></td>
					</tr>
				</tbody>
			</table>
		</div>
		
		<div id="data-form" style="display: none;">
			<form action="<?php echo $moduleForm->getAction(); ?>"
				method="<?php echo $moduleForm->getMethod();?>"
				id="frmModuleConfiguration" class="zend_form">
				<?php echo $moduleForm->customer_module_id->renderViewHelper()?>
				<?php echo $moduleForm->language_id->renderViewHelper()?>
				<table>
					<tbody>
						<tr>
							<td><?php echo $moduleForm->screen_name->renderLabel() ?></td>
							<td><?php echo $moduleForm->screen_name->renderViewHelper()?></td>
						</tr>
						<tr>
							<td><label for="icon"><?php echo $this->translate('Icon:'); ?></label> </td>
					        <td>
					        	<input id="icon" type="file" name="icon" />
					        	<input id="icon_path" type="hidden" name="icon_path" />
								<img alt="" id="img-icon" />
							</td>
						</tr>
						<tr>
							<td><label for="background_image"><?php echo $this->translate('Background Image:'); ?></label> </td>
					        <td>
					        	 <div id="myDropdown"></div>
					        	 <input id="background_image_path" type="hidden" name="background_image_path" />			        	 
							</td>
						</tr>
						<tr>
							<td><?php echo $moduleForm->visibility->renderLabel() ?></td>
							<td><?php echo $moduleForm->visibility->renderViewHelper()?></td>
						</tr>
					</tbody>
				</table>
				<div class="customer_submit"><?php echo $moduleForm->submit->renderViewHelper().$moduleForm->cancel->renderViewHelper();?></div>
			</form>
		</div>
	</div>
	<div id="reorder">
			<form id="frmFilter">
			<div id="filterBox">
			      <table style="width:100%;border:0;border-spacing:0;border-collapse:collapse;">
			        <tr>
			          <td valign="middle"><h2 class="filterIcon"><?php echo $this->translate('Reorder Modules'); ?></h2></td>
			          <td align="right">
			          	<input type="submit" name="button" id="save-order" class="button" value="<?php echo $this->translate('Save')?>" />
			          	<input type="reset" name="reset" id="reorder-reset" class="button" value="<?php echo $this->translate('Reset')?>" />
			          </td>
			        </tr>
			      </table>
			</div>
			</form>
			<table style="border-spacing:0;border-collapse:collapse;width:100%" class="pattern-style-b" id="dataGridReorder">
				<thead>
					<tr>
						<th scope="col"><?php echo $this->translate('Module Name'); ?></th>
					    <th scope="col"><?php echo $this->translate('Visible'); ?></th>
					 	<th scope="col"><?php echo $this->translate('Published'); ?></th>
					</tr>
			    </thead> 
				<tbody>
				<?php 
					foreach($data as $row) {
				?>
				<tr id="index-<?php echo $row["cm.customer_module_id"];?>" class="sortable" style="cursor: move;">
					<td><?php echo $row['m.name']; ?></td>
				   	<td><?php echo ($row['cm.visibility']==1)? "YES" : "NO"; ?></td>
				   	<td><?php echo $row['cm.is_publish']; ?></td>
				</tr>
				<?php } ?>
				</tbody>      
			</table>
	</div>
</div>
<script type="text/javascript">
var grid ="";
	$(document).ready(function(){
		$("#font_color,#theme_color").colorpicker({
			parts: 'draggable',
			showOn: 'both',
			regional: 'en',
			buttonColorize: true,
			showNoneButton: false,
			alpha: true,
			close : function(){
				//$(this).val("#"+$(this).val());
				var self = $(this);
				$(this).parent().find("button").css({background:"#"+self.val()});
			}
		});
		//$(":button").css('background',"none");
	document.onselectstart = function() {return false;}
		$( "#config-tabs" ).tabs();
		$("#frmGeneralConfiguration").validator().submit(function(e){
			if(!e.isDefaultPrevented()){
				var self = this;
				var promptus = false;
				$(document).queue(function(next){
					promptus = new prompt({
						element : $("#config-tabs"),
						reference : self,
						beforeShow : function(){
							this.alternateMessage = this.showLoadingMessage("<?php echo $this->translate('Saving Configuration..');?>");
						}
					});
					next();
				}).queue(function(next){
					$.ajax({
						url : "<?php echo $this->url(array("module"=>"default","controller"=>"configuration","action"=>"save-general-configuration"),"default",true);?>",
						cache : false,
						type : "POST",
						data : $(self).serialize(),
						dataType : "json",
						success : function(json){
							if( json && json.success != undefined ) {
								var customer_configuration = json.success.message;
								$(self).find("#customer_configuration_id").attr("value",customer_configuration.customer_configuration_id);								
								promptus.showSuccessMessage("<?php echo $this->translate('Configuration saved successfully');?>");
								setTimeout(function(){
									next();
								}, 2000);
							} else if( json && json.errors != undefined ){
								if( typeof(json.errors.message) == "string"){
										promptus.showErrorMessage(json.errors.message);
										setTimeout(function(){
											next();
										}, 2000);
								} else {
									$(self).data("validator").invalidate(json.errors);
									next();
								}
							}
						},
						error : next
					});
				}).queue(function(next){
					promptus.close();
					next();
				});
			}
			e.preventDefault();
		});

		grid = dataTable({
			aaSorting: [[ 3, "desc" ]],
			"aoColumns": [
							{ "sName": "m_description" },
							{ "sName": "d_screen_name" },
							{ "sName": "cm_visibility" },
							{ "sName": "cm_order_number" },
							{ "sName": "cm_is_publish" },
							{ "sName": "actions","bSortable": false}
						 ],
			id : $('#dataGrid'),
			filterForm : null,
			sAjaxSource: "<?php echo $this->url(array("module"=>"default","controller"=>"configuration","action"=>"grid"));?>"
		});
		$(document).on("click",".grid_publish",function(e){
	        var self = this; 
			window.currentModulePublishUrl = $(this).attr("href"); 
	        if(!e.isDefaultPrevented()){
	        	var promtus = new prompt({
	            	reference : self,
	                element : "#config-tabs",
	                message : "<?php echo $this->translate('Are you sure you want to publish this Module?')?>",
	                buttons : {
	                    "Yes" : function(self){
	                        var prompt = this;
	                        $(document).queue(function(next){
	                            prompt.showLoadingMessage("<?php echo $this->translate('Please wait while publishing module...')?>");
	                            next();
	                        }).queue(function(next){
	                        	$.ajax({
	                                url: window.currentModulePublishUrl,
	                                cache: false,
	                                type: "GET",
	                                dataType: "json",
	                                success: function(json){
	                                    if(json.success != undefined){ 
	                                    	prompt.showSuccessMessage("<?php echo $this->translate('Module pubished successfully.')?>");
	                                    	setTimeout(function(){
	                                    		prompt.close();
	                                        	grid.fnDraw();
	                                        }, 1000);
	                                    } else if(json.errors != undefined){
	                                        var errorMessage = "<?php echo $this->translate('Unable to publish module error returned:')?><br />";
	                                        errorMessage += json.errors;
	                                    	prompt.showErrorMessage(errorMessage);
	                                    	setTimeout(function(){
	                                    		prompt.close();
	                                        }, 2000);
	                                    }
	                                },
	                                error: function(){
	                                }
	                            }).complete(next); 
	                        });
	                    },
	                    "No"  : function(self){
	                    	this.close();
	                    },
	                }
	            });
	            e.preventDefault();
	        }
	    });

		$(document).on("click",".edit",function(e){
	        var self = this; 
			window.currentEditUrl = $(this).attr("href"); 
	        if(!e.isDefaultPrevented()){
		        var promptus = new prompt({
			        	reference : self,
		                element : "#config-tabs",
			        });
	        	$(document).queue(function(next){
	        		$('#frmModuleConfiguration').each (function(){
	        			  this.reset();
	        		});
	        		promptus.showLoadingMessage("<?php echo $this->translate('Please wait...')?>");
                    next();
                }).queue(function(next){
	        		$.ajax({
                    	url: window.currentEditUrl,
                        cache: false,
                        type: "GET",
                        dataType: "json",
                        success: function(json){
                        	if(json.success != undefined){ 
                            	// Success Show Record To Edit.
                            	data = json.success;
								dropdown = json.dropdown;
                            	$("#customer_module_id").attr("value",data["cm_customer_module_id"]);
                            	$("#language_id").attr("value",data["d_language_id"]);
                            	$("#icon_path").attr("value",data["cm_icon"]);
                            	$("#screen_name").attr("value",data["d_screen_name"]);
                            	$('#myDropdown').ddslick({
                                	data:dropdown,
                        			width:300,
                        		    selectText: "Select your preferred background image",
                        		    imagePosition:"left",   
                        		});
                            	$('#myDropdown').on("click",function(){
                        			var data = $('#myDropdown').data('ddslick');
                        			var id = data.selectedData.value;
                        			$("#background_image_path").attr("value",id);
                            	});
								$("#img-icon").attr("src","<?php echo $this->baseUrl()."/icon/"; ?>" + data["cm_icon"]);
								//$("#img-background").attr("src","<?php //echo $this->baseUrl()."/background/"; ?>" + data["d_background_image"]);
                            	if(data["cm_visibility"]==1) {
                            		$("#visibility").attr("checked","checked");
                            	} else {
                            		$("#visibility").removeAttr("checked");
                            	}
                            	
                            	$("#data-grid").hide();
                            	$("#data-form").show();
	                            setTimeout(function(){
	                            	promptus.close();
	                            }, 1000);
                            } else if(json.errors != undefined){
	                        	var errorMessage = "<?php echo $this->translate('Unable to edit module error returned:')?><br />";
	                            errorMessage += json.errors;
	                            promptus.showErrorMessage(errorMessage);
	                            setTimeout(function(){
	                            	promptus.close();
	                            }, 2000);
	                        }
                       	}
                	}).complete(next);
                }).queue(function(next){
                	promptus.close();
                    next();
            	});
	      		e.preventDefault();
	    	}
	    });

		$("#frmModuleConfiguration").validator().submit(function(e){
			if(!e.isDefaultPrevented()){
				var self = this;
				var promptus = false;
				$(document).queue(function(next){
					promptus = new prompt({
						element : $("#config-tabs"),
						reference : self,
						beforeShow : function(){
							this.alternateMessage = this.showLoadingMessage("<?php echo $this->translate('Saving Module Configuration..');?>");
						}
					});
					next();
				}).queue(function(next){
					// Upoad Images
					var count = 0;
					$("input[type='file']").each(function(){
						var input = $(this).attr("id");
						if($(this).attr("value") != "")
						{
							$.ajaxFileUpload({
								url:'<?php echo $this->url(array("module"=>"default","controller"=>"configuration","action"=>"upload"),"default",true);?>',
								secureuri:false,
								fileElementId:$(this).attr("id"),
								dataType: 'json',
								data:{upload:$(this).attr("id")},
								success: function (data, status)
								{
									if(data.success != undefined) {
										$("#"+ input + "_path").attr("value",data.success);
									}	
								},
								complete: function(){
									count++;
									if(count==2){
										next();
									}
								}
							});
						} else {
							count++;
							if(count==2){
								next();
							}
							next();
						}
					});
				}).queue(function(next){
					// Save Modules
					$.ajax({
						type : "POST",
						cache : false,
						data : $(self).serialize(),
						dataType: 'json',
						url : "<?php echo $this->url(array("module"=>"default","controller"=>"configuration","action"=>"save-module"),"default",true);?>",
						success : function(json){
							if(json.errors != undefined){
								promptus.showErrorMessage(json.errors);
								next();
							} else if(json.success != undefined){
								promptus.showSuccessMessage("<?php echo $this->translate('Module updated successfully.'); ?>");
								setTimeout(function(){
									grid.fnDraw();
									hideForm();
									next();
								}, 2000);
							}
						},
						complete: function(){
							next();
						}
		  			});
				}).queue(function(next){
					promptus.close();
					next();
				});
			}
			e.preventDefault();
		});
	});
	window.dragStartIndex = 0;
	//  $(".sortable:eq(1)").insertBefore($(".sortable:eq(0)"));
	$(".sortable").on("mousedown",function(){
		window.dragStartIndex = $(this).index(".sortable") + 1;
		$(this).addClass("drag-start");
	});
	$(".sortable").on("mouseover",function(){
		if(window.dragStartIndex>0 && window.dragStartIndex != ($(this).index(".sortable") + 1)) {
			var fromIndex = window.dragStartIndex - 1;
			var toIndex = $(this).index(".sortable");
			if(fromIndex > toIndex) {
				$(".sortable:eq("+fromIndex+")").insertBefore($(".sortable:eq("+toIndex+")"));
			} else {
				$(".sortable:eq("+fromIndex+")").insertAfter($(".sortable:eq("+toIndex+")"));
			}
			window.dragStartIndex = toIndex+1;
		}
	});
	$(document).on("mouseup",function(){window.dragStartIndex = 0; $(".sortable").removeClass("drag-start");});
	$("#dataGridReorder").on("mousedown",function(){return false;});
	$(document).on("click","#save-order",function(e){
        var self = this;
        window.currentDeleteUrl = location.href; 
        if(!e.isDefaultPrevented()){
        	var promptus = new prompt({
                    	reference : self,
                        element : "#content",
                        message : "<?php echo $this->translate('Are you sure you want to save website order?'); ?>",
                        buttons : {
                            "Yes" : function(self){
                                var prompt = this;
                                $(document).queue(function(next){
                                    prompt.showLoadingMessage("<?php echo $this->translate('Please wait while saving website order..'); ?>");
                                    next();
                                }).queue(function(next){
                                    $.ajax({
                                        url: "<?php echo $this->url(array("module"=>"default","controller"=>"configuration","action"=>"reorder"),"default",true);?>",
                                        cache: false,
                                        type: "POST",
                                        dataType: "json",
                                        data: serializeOrder(),
                                        success: function(json){
                                            if(json.success != undefined){ 
                                            	prompt.showSuccessMessage("<?php echo $this->translate('website reordered successfully.'); ?>");
                                            	setTimeout(function(){
                                            		prompt.close();
                                                }, 1000);
                                            } else if(json.errors != undefined){
                                                var errorMessage = "<?php echo $this->translate('Unable to reorder website:'); ?><br />";
                                                errorMessage += json.errors.message;
                                            	prompt.showErrorMessage(errorMessage);
                                            	setTimeout(function(){
                                            		prompt.close();
                                                }, 2000);
                                            }
                                        },
                                        error: function(){
                                        }
                                    }).complete(next); 
                                });
                            },
                            "No"  : function(self){
                            	this.close();
                            },
                        }
                    });
            e.preventDefault();
        }
    });
	$("#reorder-reset").on("click", function(){
		location.href = location.href;
	});
	function serializeOrder(){
		var response = {order:{}};
		$(".sortable").each(function(){
			var index = ($(this).attr("id") + "").replace("index-","");
			response["order"][$(this).index(".sortable")+1] = index;
		});
		return response;
	}
	function hideForm() {
		$("#data-grid").show();
    	$("#data-form").hide();
	}
	$(document).on('change',"#font_color",function(){
		alert($(this).val());
	});
</script>